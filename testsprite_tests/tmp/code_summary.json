{
  "tech_stack": [
    "TypeScript",
    "React 18",
    "Vite",
    "Supabase",
    "PostgreSQL",
    "Tailwind CSS",
    "shadcn/ui",
    "React Router DOM",
    "React Hook Form",
    "Zod",
    "Recharts",
    "Lucide React",
    "Vercel"
  ],
  "features": [
    {
      "name": "Authentication API",
      "description": "Sistema completo de autenticação com Supabase Auth, incluindo login, registro, logout e callback OAuth",
      "files": [
        "src/hooks/useAuth.tsx",
        "src/pages/Auth.tsx",
        "src/pages/auth/callback.tsx",
        "src/components/ProtectedRoute.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/auth/login": {
            "post": {
              "summary": "User login",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/auth/callback": {
            "get": {
              "summary": "OAuth callback handler"
            }
          }
        }
      }
    },
    {
      "name": "Quiz Management API",
      "description": "CRUD completo para quizzes, incluindo criação, edição, publicação e gerenciamento de perguntas",
      "files": [
        "src/lib/supabaseApi.ts",
        "src/pages/QuizEditor.tsx",
        "src/pages/Dashboard.tsx",
        "src/components/quiz/QuestionEditor.tsx",
        "api/consolidated.js"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Quiz Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/quizzes": {
            "get": {
              "summary": "List user quizzes",
              "parameters": [
                {"name": "page", "in": "query", "schema": {"type": "integer"}},
                {"name": "limit", "in": "query", "schema": {"type": "integer"}}
              ]
            },
            "post": {
              "summary": "Create new quiz",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "titulo": {"type": "string"},
                        "descricao": {"type": "string"},
                        "tema": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/consolidated/quizzes/{id}": {
            "get": {
              "summary": "Get quiz by ID"
            },
            "put": {
              "summary": "Update quiz"
            },
            "delete": {
              "summary": "Delete quiz"
            }
          }
        }
      }
    },
    {
      "name": "Quiz Runner API",
      "description": "Sistema para executar quizzes públicos, coletar respostas e gerar resultados",
      "files": [
        "src/pages/QuizRunner.tsx",
        "src/components/quiz/QuizResponseHandler.tsx",
        "src/pages/ResultPage.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Quiz Runner API",
          "version": "1.0.0"
        },
        "paths": {
          "/q/{publicId}": {
            "get": {
              "summary": "Load public quiz for execution",
              "parameters": [
                {"name": "publicId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          },
          "/api/consolidated/responses": {
            "post": {
              "summary": "Submit quiz responses",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "quiz_id": {"type": "string"},
                        "respostas": {"type": "object"},
                        "pontuacao": {"type": "number"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Analytics API",
      "description": "Sistema avançado de analytics com métricas, relatórios e dashboards em tempo real",
      "files": [
        "src/components/analytics/AdvancedAnalyticsDashboard.tsx",
        "src/components/quiz/AnalyticsDashboard.tsx",
        "src/components/analytics/HeatmapAnalytics.tsx",
        "src/lib/analytics.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Analytics API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/analytics/{quizId}": {
            "get": {
              "summary": "Get quiz analytics data",
              "parameters": [
                {"name": "quizId", "in": "path", "required": true, "schema": {"type": "string"}},
                {"name": "period", "in": "query", "schema": {"type": "string", "enum": ["7d", "30d", "90d"]}}
              ]
            }
          },
          "/api/consolidated/analytics/export": {
            "post": {
              "summary": "Export analytics data",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "quiz_ids": {"type": "array", "items": {"type": "string"}},
                        "format": {"type": "string", "enum": ["csv", "json", "xlsx"]}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "User Management API",
      "description": "Gerenciamento de perfis de usuário, planos e configurações",
      "files": [
        "src/lib/usageTracker.ts",
        "src/lib/planManager.ts",
        "src/lib/subscriptionManager.ts",
        "src/pages/Settings.tsx",
        "src/types/user.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "User Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/profile": {
            "get": {
              "summary": "Get user profile"
            },
            "put": {
              "summary": "Update user profile"
            }
          },
          "/api/consolidated/usage": {
            "get": {
              "summary": "Get usage statistics"
            }
          },
          "/api/consolidated/subscription": {
            "post": {
              "summary": "Update subscription plan"
            }
          }
        }
      }
    },
    {
      "name": "Templates API",
      "description": "Sistema de templates pré-configurados para diferentes tipos de quizzes",
      "files": [
        "src/pages/Templates.tsx",
        "src/lib/expandedTemplates.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Templates API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/templates": {
            "get": {
              "summary": "List available templates",
              "parameters": [
                {"name": "category", "in": "query", "schema": {"type": "string"}},
                {"name": "difficulty", "in": "query", "schema": {"type": "string"}}
              ]
            }
          },
          "/api/consolidated/templates/{id}/clone": {
            "post": {
              "summary": "Clone template to create new quiz"
            }
          }
        }
      }
    },
    {
      "name": "Security & Audit API",
      "description": "Sistema de segurança, auditoria e monitoramento de atividades",
      "files": [
        "src/components/security/SecurityAuditManager.tsx",
        "src/lib/errorHandling.ts",
        "src/utils/errorLogger.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Security & Audit API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/security/events": {
            "get": {
              "summary": "Get security events log"
            }
          },
          "/api/consolidated/security/audit": {
            "post": {
              "summary": "Trigger security audit"
            }
          }
        }
      }
    },
    {
      "name": "Integration APIs",
      "description": "Integrações com CRM, webhooks, pixel tracking e sistemas externos",
      "files": [
        "src/components/integrations/CRMIntegrationManager.tsx",
        "src/lib/webhookSystem.ts",
        "src/lib/pixelSystem.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Integration APIs",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/integrations/crm": {
            "get": {
              "summary": "List CRM integrations"
            },
            "post": {
              "summary": "Create CRM integration"
            }
          },
          "/api/consolidated/webhooks": {
            "post": {
              "summary": "Configure webhook endpoint"
            }
          }
        }
      }
    },
    {
      "name": "Demo Mode API",
      "description": "Sistema de demonstração com dados mock para testes e apresentações",
      "files": [
        "src/hooks/useDemoMode.tsx",
        "src/lib/demoData.ts",
        "src/lib/initializeDemoData.ts",
        "src/components/DemoModeIndicator.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Demo Mode API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/consolidated/demo/toggle": {
            "post": {
              "summary": "Toggle demo mode on/off"
            }
          },
          "/api/consolidated/demo/data": {
            "get": {
              "summary": "Get demo data"
            }
          }
        }
      }
    }
  ]
}